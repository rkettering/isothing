{
	id: "iso_camera",
	is_strict: true,
	is_human: true,


	properties: {
		camera_rot:  { type: "{xy: decimal, xz: decimal, yz: decimal }",  default: {xy:45, xz:270, yz:60}  }, //{'xy': 5,'xz': 45,'yz': 139}
		//key ones of interest:  xy = 45, 135, 225, 315
		/*
			animate(me,{camera_rot:{xy:45, xz: 270, yz:60}}, {duration: 200, easing: lib.math.ease_in_sine})
			animate(me,{camera_rot:{xy:315, xz: 270, yz:60}}, {duration: 200, easing: lib.math.ease_in_sine})
		*/
	
		tile_offset: "decimal :: 82",
						
		draw: "map(filter(level.chars, value is obj iso_object), value.draw)",
	},


	on_create: "[
					map(range(30), spawn('iso_object', x, y, {pos: {x: tile_offset * int(index / 10), y: tile_offset * index % 10, z: 0 }})),
					map(range(5), spawn('iso_object', x, y, {pos: {x: 0, y: 0, z: tile_offset/2 * index + 1 }})),
				]",

	on_process: "[
					draw,
					if(ctrl_attack, set(camera_rot.xy, mod(camera_rot.xy + rot_offset, 360)) ),
					if(ctrl_tongue, set(camera_rot.xy, mod(camera_rot.xy - rot_offset, 360)) ),
					if(ctrl_down, set(camera_rot.yz, mod(camera_rot.yz + rot_offset, 360)) ),
					if(ctrl_up, set(camera_rot.yz, mod(camera_rot.yz - rot_offset, 360)) ),
					if(ctrl_right, set(camera_rot.xz, mod(camera_rot.xz + rot_offset, 360)) ),
					if(ctrl_left, set(camera_rot.xz, mod(camera_rot.xz - rot_offset, 360)) ),
				] where rot_offset = 1",
			
	
	

	animation: [
		{
			image: "tile.png",
			id: "stand",
			rect: [0,0,1,1],
			frames: 1,
			duration: 10,
		},
	],
}